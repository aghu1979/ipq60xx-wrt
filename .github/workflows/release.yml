# .github/workflows/release.yml
name: 创建官方发布版

on:
  push:
    tags:
      - 'v*'

jobs:
  build-ultra:
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        branch_config: [base_openwrt, base_immwrt, base_libwrt]
    uses: ./.github/workflows/build.yml
    with:
      ubuntu_version: 'ubuntu-22.04'
      branch_config: ${{ matrix.branch_config }}
      package_config: 'Ultra'
      target_arch: 'ipq60xx'

  build-max:
    needs: build-ultra
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        branch_config: [base_openwrt, base_immwrt, base_libwrt]
    uses: ./.github/workflows/build.yml
    with:
      ubuntu_version: 'ubuntu-22.04'
      branch_config: ${{ matrix.branch_config }}
      package_config: 'Max'
      target_arch: 'ipq60xx'

  build-pro:
    needs: build-max
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        branch_config: [base_openwrt, base_immwrt, base_libwrt]
    uses: ./.github/workflows/build.yml
    with:
      ubuntu_version: 'ubuntu-22.04'
      branch_config: ${{ matrix.branch_config }}
      package_config: 'Pro'
      target_arch: 'ipq60xx'

  create-release:
    needs: [build-ultra, build-max, build-pro]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 📥 下载所有产物
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: 📝 生成 Release 正文
        id: generate_body
        run: |
          # ... (此脚本内容与之前相同，用于生成漂亮的Release说明) ...
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat release_body.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 🚀 创建 Release 并上传资源
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: ${{ steps.generate_body.outputs.body }}
          files: |
            all-artifacts/openwrt-*/**/*.bin
            all-artifacts/error-logs-*/**/*
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}

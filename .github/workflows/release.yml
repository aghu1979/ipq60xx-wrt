# .github/workflows/release.yml
name: ÂàõÂª∫ÂÆòÊñπÂèëÂ∏ÉÁâà

on:
  push:
    tags:
      - 'v*'

jobs:
  # „ÄêÂÖ≥ÈîÆ‰øÆÊîπ„ÄëÁ¨¨‰∏ÄÈò∂ÊÆµÔºöÂπ∂Ë°åÁºñËØëÊâÄÊúâÂàÜÊîØÁöÑ Ultra ÈÖçÁΩÆ
  build-ultra:
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        branch_config: [openwrt_base, immwrt_base, libwrt_base]
    uses: ./.github/workflows/build.yml
    with:
      ubuntu_version: 'ubuntu-22.04'
      branch_config: ${{ matrix.branch_config }}
      package_config: 'Ultra'
      target_arch: 'ipq60xx'

  # „ÄêÂÖ≥ÈîÆ‰øÆÊîπ„ÄëÁ¨¨‰∫åÈò∂ÊÆµÔºöÁ≠âÂæÖ Ultra ÂÆåÊàêÂêéÔºåÂπ∂Ë°åÁºñËØëÊâÄÊúâÂàÜÊîØÁöÑ Max ÈÖçÁΩÆ
  build-max:
    needs: build-ultra
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        branch_config: [openwrt_base, immwrt_base, libwrt_base]
    uses: ./.github/workflows/build.yml
    with:
      ubuntu_version: 'ubuntu-22.04'
      branch_config: ${{ matrix.branch_config }}
      package_config: 'Max'
      target_arch: 'ipq60xx'

  # „ÄêÂÖ≥ÈîÆ‰øÆÊîπ„ÄëÁ¨¨‰∏âÈò∂ÊÆµÔºöÁ≠âÂæÖ Max ÂÆåÊàêÂêéÔºåÂπ∂Ë°åÁºñËØëÊâÄÊúâÂàÜÊîØÁöÑ Pro ÈÖçÁΩÆ
  build-pro:
    needs: build-max
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        branch_config: [openwrt_base, immwrt_base, libwrt_base]
    uses: ./.github/workflows/build.yml
    with:
      ubuntu_version: 'ubuntu-22.04'
      branch_config: ${{ matrix.branch_config }}
      package_config: 'Pro'
      target_arch: 'ipq60xx'

  # „ÄêÂÖ≥ÈîÆ‰øÆÊîπ„ÄëRelease ‰ªªÂä°ÈúÄË¶ÅÁ≠âÂæÖÊâÄÊúâÊûÑÂª∫‰ªªÂä°ÂÆåÊàê
  create-release:
    needs: [build-ultra, build-max, build-pro] # „ÄêÂÖ≥ÈîÆ‰øÆÊîπ„Äë‰æùËµñÊâÄÊúâÊûÑÂª∫Èò∂ÊÆµ
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Ê£ÄÂá∫‰ª£Á†Å
        uses: actions/checkout@v4

      - name: ‰∏ãËΩΩÊâÄÊúâ‰∫ßÁâ©
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: ÁîüÊàê Release Ê≠£Êñá
        id: generate_body
        run: |
          touch release_body.md
          echo "## üöÄ OpenWrt Firmware Release ${{ github.ref_name }}" >> release_body.md
          echo "" >> release_body.md
          echo "### ‚úÖ Successful Builds" >> release_body.md
          echo "| Branch | Package | Arch | Download |" >> release_body.md
          echo "|---|---|---|---|" >> release_body.md

          for dir in all-artifacts/openwrt-*/; do
            if [ -d "$dir" ]; then
              dirname=$(basename "$dir")
              arch=$(echo $dirname | cut -d'-' -f2)
              branch=$(echo $dirname | cut -d'-' -f3)
              package=$(echo $dirname | cut -d'-' -f4)
              firmware_file=$(find "$dir" -name "*sysupgrade*" | head -n 1)
              if [ -n "$firmware_file" ]; then
                filename=$(basename "$firmware_file")
                echo "| $branch | $package | $arch | [$filename](./$filename) |" >> release_body.md
              fi
            fi
          done

          echo "" >> release_body.md
          echo "### ‚ùå Failed Builds & Error Logs" >> release_body.md
          echo "<details>" >> release_body.md
          echo "<summary>Click to view error logs</summary>" >> release_body.md
          echo "" >> release_body.md
          echo '```' >> release_body.md
          for logfile in all-artifacts/error-logs-*/build.log; do
            if [ -f "$logfile" ]; then
              logdir=$(dirname "$logfile")
              logname=$(basename "$logdir")
              echo "#### üìÑ Log for $logname" >> release_body.md
              cat "$logfile" >> release_body.md
              echo "" >> release_body.md
            fi
          done
          echo '```' >> release_body.md
          echo "</details>" >> release_body.md

          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat release_body.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: ÂàõÂª∫ Release Âπ∂‰∏ä‰º†ËµÑÊ∫ê
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: ${{ steps.generate_body.outputs.body }}
          files: |
            all-artifacts/openwrt-*/**/*.bin
            all-artifacts/error-logs-*/**/*
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}

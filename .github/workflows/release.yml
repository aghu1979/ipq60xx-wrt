name: 创建官方发布版

# 定义触发条件：当创建一个以 'v' 开头的标签时
on:
  push:
    tags:
      - 'v*'

jobs:
  # 第一个 job：构建所有版本的固件
  build-matrix:
    strategy:
      fail-fast: false
      matrix:
        branch_config: [openwrt_base, immwrt_base, libwrt_base]
        package_config: [Pro, Max, Ultra]
        target_arch: [ipq60xx]        # 在这里添加新架构例如 ipq80xx
    uses: ./.github/workflows/build.yml
    with:
      branch_config: ${{ matrix.branch_config }}
      package_config: ${{ matrix.package_config }}
      target_arch: ${{ matrix.target_arch }}

  # 第二个 job：创建 Release
  create-release:
    # 依赖 build-matrix job，必须等所有构建完成后才能执行
    needs: build-matrix
    runs-on: ubuntu-latest
    # 需要授权才能创建 Release
    permissions:
      contents: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      # 下载所有构建任务上传的产物
      - name: 下载所有产物
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      # 生成 Release 的正文内容
      - name: 生成 Release 正文
        run: |
          touch release_body.md
          echo "## 🚀 OpenWrt Firmware Release ${{ github.ref_name }}" >> release_body.md
          echo "" >> release_body.md
          echo "### ✅ Successful Builds" >> release_body.md
          echo "| Branch | Package | Download |" >> release_body.md
          echo "|---|---|---|" >> release_body.md

          for dir in all-artifacts/openwrt-ipq60xx-*/; do
            if [ -d "$dir" ]; then
              dirname=$(basename "$dir")
              branch=$(echo $dirname | cut -d'-' -f3)
              package=$(echo $dirname | cut -d'-' -f4)
              firmware_file=$(find "$dir" -name "*sysupgrade*" | head -n 1)
              if [ -n "$firmware_file" ]; then
                filename=$(basename "$firmware_file")
                echo "| $branch | $package | [$filename](./$filename) |" >> release_body.md
              fi
            fi
          done

          echo "" >> release_body.md
          echo "### ❌ Failed Builds & Error Logs" >> release_body.md
          echo "<details>" >> release_body.md
          echo "<summary>Click to view error logs</summary>" >> release_body.md
          echo "" >> release_body.md
          echo '```' >> release_body.md
          for logfile in all-artifacts/error-logs-*/build.log; do
            if [ -f "$logfile" ]; then
              logdir=$(dirname "$logfile")
              logname=$(basename "$logdir")
              echo "#### 📄 Log for $logname" >> release_body.md
              cat "$logfile" >> release_body.md
              echo "" >> release_body.md
            fi
          done
          echo '```' >> release_body.md
          echo "</details>" >> release_body.md

          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat release_body.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 创建 Release 并上传所有文件
      - name: 创建 Release 并上传资源
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: ${{ steps.generate_body.outputs.body }}
          files: |
            all-artifacts/openwrt-*/**/*.bin
            all-artifacts/error-logs-*/**/*
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
